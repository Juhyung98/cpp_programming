P#2
P#2. Complex number
복소수의 표현 및 연산을 지원하는 클래스를 구현한다. 해당 클래스는 아래와 같은 기능을 가진다.

- a + bi 형태의 cout 출력 지원

- 복소수 간 사칙연산 및 복소수와 실수 사이의 사칙연산 지원

- Encapsulation 원칙에 따라, 내부 데이터는 private화

Requirements 및 배점 (6점)
- 1.0점 NComplex class 정의: 두개의 인자 (실수부, 허수부)를 가지는 생성자와 0개의 인자를 가지는 디폴트 생성자 (0+0i로 초기화)를 구현

- 실수부와 허수부를 표현하는 멤버 변수는 private을 유지

- 3.0점 +-*/ 의 사칙연산 지원: 아래의 경우를 고려

- 복소수 op 복소수

- 복소수 op 실수

- 실수 op 복소수

- 1,0점 cout 출력 지원: a + bi 형태

- 0.5점 Divide by 0 오류 처리:

- (a+bi / 0) 연산 수행 시, 오류 메시지 출력 후 실행 종료

- HINT: exit(0); 사용

- 0.5점 보고서 작성 및 제출

1: 문제 정의: 내가 만들어야할 기능을 정의 (예: 클래스 정의, 생성자, 연산자 오버로딩 등등)

2: 프로그램 설계: 위에서 정의한 문제를 해결하기 위한 구체적인 방법 제시

- Main 함수 및 출력 예

int main()
{
    NComplex n1 (5.1, 2.2), n2(2.0, 2.0), n3;
    double d1 = 3.0;

    cout << "n1+n2: " << n1+n2 << endl;
    cout << "n1*n2: " << n1*n2 << endl;
    cout << "n1-d1: " << n1-d1 << endl;
    cout << "d1*n2: " << d1*n2 << endl;
    cout << "n1/n3: " << n1/n3 << endl;
}

7.1 + 4.2i
5.8 + 14.6i
2.1 + 2.2i
6.0 + 6.0i
Error: divide by zero
- 코드 제출시는 위 main 함수를 포함해서 제출하되, 다양한 경우에 대해서 정상 작동하도록 구현할 것. (채점 시 다른 main 함수를 사용)

제출
- LMS에 소스파일 (학번.cpp) 및 보고서 (학번.txt) 제출